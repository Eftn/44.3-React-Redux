{"ast":null,"code":"import { ADD_TO_CART, REMOVE_FROM_CART, APPLY_DISCOUNT } from \"./actionTypes\";\nimport { calculateCartTotal } from \"./helpers\";\nimport data from \"./data.json\";\nconst validDiscounts = {\n  REMOVE10: 0.1,\n  REMOVE20: 0.2,\n  REMOVE30: 0.3\n};\nconst DEFAULT_STATE = {\n  products: data.products,\n  cartItems: {},\n  cartValue: 0.0,\n  discountApplied: false,\n  discountAmount: 0\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      {\n        const cartCopy = { ...state.cartItems\n        };\n        cartCopy[action.id] = (cartCopy[action.id] || 0) + 1;\n        return { ...state,\n          cartItems: cartCopy,\n          cartValue: calculateCartTotal(state.products, cartCopy, state.discountAmount)\n        };\n      }\n\n    case REMOVE_FROM_CART:\n      {\n        const cartCopy = { ...state.cartItems\n        };\n        if (!cartCopy[action.id]) return state;\n        cartCopy[action.id]--;\n\n        if (cartCopy[action.id] === 0) {\n          delete cartCopy[action.id];\n        }\n\n        return { ...state,\n          cartItems: cartCopy,\n          cartValue: calculateCartTotal(state.products, cartCopy, state.discountAmount)\n        };\n      }\n\n    case APPLY_DISCOUNT:\n      {\n        if (state.discountApplied === false && validDiscounts[action.discount]) {\n          const discountAmount = validDiscounts[action.discount];\n          return { ...state,\n            cartValue: calculateCartTotal(state.products, state.cartItems, discountAmount),\n            discountApplied: true,\n            discountAmount\n          };\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/eftn/OneDrive/react-router/react-redux-patterns-demo/redux-shoply-solution/src/rootReducer.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","APPLY_DISCOUNT","calculateCartTotal","data","validDiscounts","REMOVE10","REMOVE20","REMOVE30","DEFAULT_STATE","products","cartItems","cartValue","discountApplied","discountAmount","rootReducer","state","action","type","cartCopy","id","discount"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,cAAxC,QAA8D,eAA9D;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE,GADW;AAErBC,EAAAA,QAAQ,EAAE,GAFW;AAGrBC,EAAAA,QAAQ,EAAE;AAHW,CAAvB;AAMA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAEN,IAAI,CAACM,QADK;AAEpBC,EAAAA,SAAS,EAAE,EAFS;AAGpBC,EAAAA,SAAS,EAAE,GAHS;AAIpBC,EAAAA,eAAe,EAAE,KAJG;AAKpBC,EAAAA,cAAc,EAAE;AALI,CAAtB;;AAQA,SAASC,WAAT,GAAoD;AAAA,MAA/BC,KAA+B,uEAAvBP,aAAuB;AAAA,MAARQ,MAAQ;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,WAAL;AAAkB;AAChB,cAAMmB,QAAQ,GAAG,EAAE,GAAGH,KAAK,CAACL;AAAX,SAAjB;AACAQ,QAAAA,QAAQ,CAACF,MAAM,CAACG,EAAR,CAAR,GAAsB,CAACD,QAAQ,CAACF,MAAM,CAACG,EAAR,CAAR,IAAuB,CAAxB,IAA6B,CAAnD;AACA,eAAO,EACL,GAAGJ,KADE;AAELL,UAAAA,SAAS,EAAEQ,QAFN;AAGLP,UAAAA,SAAS,EAAET,kBAAkB,CAC3Ba,KAAK,CAACN,QADqB,EAE3BS,QAF2B,EAG3BH,KAAK,CAACF,cAHqB;AAHxB,SAAP;AASD;;AACD,SAAKb,gBAAL;AAAuB;AACrB,cAAMkB,QAAQ,GAAG,EAAE,GAAGH,KAAK,CAACL;AAAX,SAAjB;AACA,YAAI,CAACQ,QAAQ,CAACF,MAAM,CAACG,EAAR,CAAb,EAA0B,OAAOJ,KAAP;AAC1BG,QAAAA,QAAQ,CAACF,MAAM,CAACG,EAAR,CAAR;;AACA,YAAID,QAAQ,CAACF,MAAM,CAACG,EAAR,CAAR,KAAwB,CAA5B,EAA+B;AAC7B,iBAAOD,QAAQ,CAACF,MAAM,CAACG,EAAR,CAAf;AACD;;AACD,eAAO,EACL,GAAGJ,KADE;AAELL,UAAAA,SAAS,EAAEQ,QAFN;AAGLP,UAAAA,SAAS,EAAET,kBAAkB,CAC3Ba,KAAK,CAACN,QADqB,EAE3BS,QAF2B,EAG3BH,KAAK,CAACF,cAHqB;AAHxB,SAAP;AASD;;AACD,SAAKZ,cAAL;AAAqB;AACnB,YACEc,KAAK,CAACH,eAAN,KAA0B,KAA1B,IACAR,cAAc,CAACY,MAAM,CAACI,QAAR,CAFhB,EAGE;AACA,gBAAMP,cAAc,GAAGT,cAAc,CAACY,MAAM,CAACI,QAAR,CAArC;AACA,iBAAO,EACL,GAAGL,KADE;AAELJ,YAAAA,SAAS,EAAET,kBAAkB,CAC3Ba,KAAK,CAACN,QADqB,EAE3BM,KAAK,CAACL,SAFqB,EAG3BG,cAH2B,CAFxB;AAOLD,YAAAA,eAAe,EAAE,IAPZ;AAQLC,YAAAA;AARK,WAAP;AAUD;;AACD,eAAOE,KAAP;AACD;;AACD;AACE,aAAOA,KAAP;AAnDJ;AAqDD;;AAED,eAAeD,WAAf","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART, APPLY_DISCOUNT } from \"./actionTypes\";\nimport { calculateCartTotal } from \"./helpers\";\nimport data from \"./data.json\";\n\nconst validDiscounts = {\n  REMOVE10: 0.1,\n  REMOVE20: 0.2,\n  REMOVE30: 0.3\n};\n\nconst DEFAULT_STATE = {\n  products: data.products,\n  cartItems: {},\n  cartValue: 0.0,\n  discountApplied: false,\n  discountAmount: 0\n};\n\nfunction rootReducer(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case ADD_TO_CART: {\n      const cartCopy = { ...state.cartItems };\n      cartCopy[action.id] = (cartCopy[action.id] || 0) + 1;\n      return {\n        ...state,\n        cartItems: cartCopy,\n        cartValue: calculateCartTotal(\n          state.products,\n          cartCopy,\n          state.discountAmount\n        )\n      };\n    }\n    case REMOVE_FROM_CART: {\n      const cartCopy = { ...state.cartItems };\n      if (!cartCopy[action.id]) return state;\n      cartCopy[action.id]--;\n      if (cartCopy[action.id] === 0) {\n        delete cartCopy[action.id];\n      }\n      return {\n        ...state,\n        cartItems: cartCopy,\n        cartValue: calculateCartTotal(\n          state.products,\n          cartCopy,\n          state.discountAmount\n        )\n      };\n    }\n    case APPLY_DISCOUNT: {\n      if (\n        state.discountApplied === false &&\n        validDiscounts[action.discount]\n      ) {\n        const discountAmount = validDiscounts[action.discount];\n        return {\n          ...state,\n          cartValue: calculateCartTotal(\n            state.products,\n            state.cartItems,\n            discountAmount\n          ),\n          discountApplied: true,\n          discountAmount\n        };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}